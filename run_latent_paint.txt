## Direct Mesh Optimization
CUDA_VISIBLE_DEVICES=0 python -m scripts.train_latent_paint --log.exp_name yello_cube --guide.text "a yellow cube"  --guide.shape_path shapes/sphere.obj

CUDA_VISIBLE_DEVICES=0 python -m scripts.train_latent_paint --log.exp_name goldfish --guide.text "A goldfish"  --guide.shape_path shapes/blub.obj
CUDA_VISIBLE_DEVICES=0 python -m scripts.train_latent_paint_mesh --log.exp_name goldfish --guide.text "A goldfish"  --guide.shape_path shapes/blub.obj

CUDA_VISIBLE_DEVICES=1 python -m scripts.train_latent_paint_mesh --log.exp_name pumpkin --guide.text "A single orange pumpkin"  --guide.shape_path shapes/sphere.obj
CUDA_VISIBLE_DEVICES=0 python -m scripts.train_latent_paint_mesh --log.exp_name apple2 --guide.text "A red apple"  --guide.shape_path shapes/sphere.obj

rugby ball

## resume optimization
CUDA_VISIBLE_DEVICES=0 python -m scripts.train_latent_paint_mesh --log.exp_name full_moon --guide.text "A white full moon"  --guide.shape_path shapes/sphere.obj --optim.iters 10000 --optim.resume True --optim.ckpt /source/sihun/latent-nerf-test/experiments/full_moon/checkpoints/step_005000.pth
CUDA_VISIBLE_DEVICES=0 python -m scripts.train_latent_paint_mesh --log.exp_name rugby_ball --guide.text "A brown rugby ball on a grass"  --guide.shape_path shapes/sphere.obj --optim.iters 10000 --optim.resume True --optim.ckpt /source/sihun/latent-nerf-test/experiments/rugby_ball/checkpoints/step_005000.pth


### Textual Inversion token
https://huggingface.co/sd-concepts-library
## seems like an image?
https://huggingface.co/sd-concepts-library/fasina
https://huggingface.co/sd-concepts-library/mycat
https://huggingface.co/sd-concepts-library/tomcat

CUDA_VISIBLE_DEVICES=1 python -m scripts.train_latent_nerf --log.exp_name 'lego_man' --guide.text 'a tomcat sitting' --guide.shape_path shapes/teddy.obj --render.nerf_type latent --guide.concept_name=tomcat

## SketchShape: mesh guided NeRF -> optim NeRf -> fit mesh
python -m scripts.train_latent_nerf --config_path demo_configs/latent_nerf/lego_man.yaml
python -m scripts.train_latent_nerf --log.exp_name 'pumpkin-nerf' --guide.text 'A single orange pumpkin' --guide.shape_path shapes/sphere.obj --render.nerf_type latent
python -m scripts.train_latent_nerf --log.exp_name 'lego_man-nerf' --guide.text 'a lego man' --guide.shape_path shapes/teddy.obj --render.nerf_type latent


## make video
ffmpeg -framerate 25 -pattern_type glob -i '/source/sihun/latent-nerf-test/experiments/pumpkin2/vis/eval/*_rgb.png' -c:v libx264 -pix_fmt yuv420p /source/sihun/latent-nerf-test/experiments/pumpkin2/results/out.mp4

python -m scripts.train_latent_nerf_mesh \
    --log.exp_name 'lego_man-nerf' \
    --guide.text 'a lego man' \
    --guide.shape_path shapes/teddy.obj \
    --optim.ckpt '/source/sihun/latent-nerf-test/experiments/lego_man-nerf/checkpoints/step_005000.pth' \
    --render.nerf_type latent